
	#PBS -N stochastic-6
	#PBS -l nodes=1:ppn=1
	#PBS -l mem=1gb
	#PBS -l file=1gb
	#PBS -l walltime=48:00:00
	#PBS -q biomath
	#PBS -m n
	#PBS -j oe
	#PBS -o test/par6/terminal-output.txt
	
	function check_dir_exists () {
	# $1 mutant type directory name
		
		if [ ! -d $pardir/$1 ]; then
			if [ 0 -eq 1 ]; then
				echo "$pardir/$1 does not exist. [31mParameter set deemed invalid. Parameter set simulations stopped.(B[m"
			else
				echo "No data for $1"
			fi
			save_results
			if [ 0 -eq 1 ]; then
				exit 1
			else
				exit 0
			fi
		fi
	}
	
	function echo () {
	# $1 command to echo or option to echo
	# $2 command to echo if $1 was an option
		
		if [ 0 -eq 0 ]; then
			command echo "$1" "$2"
		fi
	}
	
	function ofeatures () {
	# $1 mutant type directory name
	# $2-$3 acceptable range for the mutant period
	# $4 mutant type full name
		
		echo -n "[34mAnalyzing oscillation features (B[m... "
		period_avg=0.0
		amp_avg=0.0
		ptot_avg=0.0
		
		check_dir_exists $1
		
		for (( i=0; i < 1; i++ ))
		do		
			values=`$curdir/analysis/ofeatures $pardir/$1/run${i}/run${i}.txt $pardir/$1/run${i}/run${i}_smooth.txt 100`
			if [[ "$values" = *[:digit:]* ]]; then
				behavior="$behavior,error"
				save_results
				exit 1
			fi
			echo $values
			period=${values%%,*}
			values=${values#*,}
			amplitude=${values%%,*}
			values=${values#*,}
			ptot=${values%%,*}

			period_avg=$($curdir/analysis/calc "$period + $period_avg")
			amp_avg=$($curdir/analysis/calc "$amplitude + $amp_avg")
			ptot_avg=$($curdir/analysis/calc "$ptot + $ptot_avg")
		done
		
		period_avg=$($curdir/analysis/calc "$period_avg / 1")
		amp_avg=$($curdir/analysis/calc "$amp_avg / 1")
		ptot_avg=$($curdir/analysis/calc "$ptot_avg / 1")
		
		behavior="$behavior,$period_avg,$amp_avg"
		if [ $1 == "wt" ]; then
			period_wt=$period_avg
			echo -n "[34mDone(B[m"
		elif [ 0 -eq 1 ]; then
			ratio=$($curdir/analysis/calc "$period_avg / $period_wt")
			if [ $($curdir/analysis/calc "$ratio < $2") -eq 1 ] || [ $($curdir/analysis/calc "$ratio > $3") -eq 1 ]; then
				echo -n "The $4 vs wild type period ratio is not between $2 and $3. [31mParameter set deemed invalid. Parameter set simulations stopped.(B[m"
				behavior="$behavior,failed"
				rm -rf $pardir
				save_results
				exit 1
			else
				echo -n "[34mOK(B[m: The $4 vs wild type period ratio is between $2 and $3"
			fi
		fi
		echo " (period=$period_avg, wild type period=$period_wt, amplitude=$amp_avg, peak to trough ratio=$ptot_avg)"
	}
	
	function run_mut () {
	# $1 = mutant type directory name
	# $2 = mutant type full name
		
		if [ 0 -eq 0 ]; then
			echo -n "[34mCreating (B[m$pardir/$1 ... "
			mkdir -p $pardir/$1
			echo "[34mDone(B[m"
			echo -n "[34mCreating (B[m$pardir/$1/par6.txt ... "
			if [ $1 == "wt" ]; then
				pars="33.4447,40.5621,43.0444,36.6159,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207"
			elif [ $1 == "her1" ]; then
				pars="0.0,40.5621,43.0444,36.6159,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207"
			elif [ $1 == "her7" ]; then
				pars="33.4447,0.0,43.0444,36.6159,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207"
			elif [ $1 == "her13" ]; then
				pars="33.4447,40.5621,0.0,36.6159,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207"
			elif [ $1 == "her713" ]; then
				pars="33.4447,0.0,0.0,36.6159,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207"
			else
				pars="33.4447,40.5621,43.0444,0.0,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207"
			fi
			echo $pars > $pardir/$1/par6.txt
			echo "[34mDone(B[m"
			
			echo "[34mRunning (B[m$2 simulation ..."
			time $curdir/stochastic/stochastic  -x 2 -y 1 -m 600 -i $pardir/$1/par6.txt -o $pardir/$1
			if [ 0 -ne 0 ]; then
				behavior="$behavior,error"
				save_results
				exit 1
			fi

			for (( i=0; i<1; i++ ))
			do
				echo -n "[34mCreating (B[m$pardir/$1/run${i} ... "
				mkdir -p $pardir/$1/run${i}
				echo "[34mDone(B[m"
				echo -n "[34mMoving (B[m$pardir/$1/run${i}.txt to $pardir/$1/run${i}/run${i}.txt ... "
				mv $pardir/$1/run${i}.txt $pardir/$1/run${i}/
				echo "[34mDone(B[m"
			done

			echo "[34mDone simulating (B[m$2"
			echo -n "[34mSmoothing data (B[m... "
			 
			for (( i=0; i < 1; i++ ))
			do
				$curdir/analysis/smoothing $pardir/$1/run${i}/run${i}.txt $pardir/$1/run${i}/run${i}_smooth.txt 40
			done		
			echo "[34mDone(B[m"
		fi
	}
	
	function save_results () {
		echo -n "[34mWriting to (B[m$curdir/test/behavior.csv ... "
		(
			flock -x 200
			echo "$behavior">>$curdir/test/behavior.csv
		) 200>>/dev/null
		echo "[34mDone(B[m"
		
		if [ 0 -eq 1 ]; then
			echo -n "[34mMoving scratch directory (B[m($pardir) to output directory ($curdir/test) ... "
			cp -r $pardir $curdir/test
			rm -rf $pardir
			echo "[34mDone(B[m"
		fi
		
		time_end=$(date +%s)
		echo -e "\nTotal elapsed time: $(($time_end - $time_start))s"
	}

	function sync() {
	# $1 = mutant type
		
		total=0.0
		for (( i=0; i<1; i++ ))
		do
			syncscore=`python $curdir/analysis/synchronized.py $pardir/$1/run${i}/run${i}.txt 600`
			if [ ${#syncscore} -gt 13 ]; then
				behavior="$behavior,error"
				save_results
				exit 1
			fi
			total=$($curdir/analysis/calc "$syncscore + $total")
		done
		total=$($curdir/analysis/calc "$total / 1")
		if [ $1 == "wt" ]; then
			syncscore_wt=$total
		elif [ $1 == "delta" ]; then
			syncscore_delta=$total
		elif [ $1 == "her1" ]; then
			syncscore_her1=$total
		elif [ $1 == "her7" ]; then
			syncscore_her7=$total
		elif [ $1 == "her13" ]; then
			syncscore_her13=$total
		else
			syncscore_her713=$total
		fi
	}
	
	time_start=$(date +%s)
	trap save_results SIGTERM
	curdir=$PBS_O_WORKDIR
	pardir=$PBS_O_WORKDIR/test/par6
	behavior="6"
	if [ 0 -eq 0 ]; then
		echo -n "[34mCreating (B[m$pardir if necessary ... "
		mkdir -p $pardir
		echo "[34mDone(B[m"
	else
		echo -n "[34mChecking if (B[m$pardir exists ... "
		if [ -d $pardir ]; then
			echo "[34mDone(B[m"
		else
			echo "[31mNot found!(B[m"
			behavior="$behavior,error"
			save_results
			exit 1
		fi
	fi
	
	echo "[34mStarting (B[mwild type ... "
	run_mut wt "wild type"
	syncscore_wt=0.0
	syncscore_delta=0.0
	syncscore_her1=0.0
	syncscore_her7=0.0
	syncscore_her13=0.0
	syncscore_her713=0.0
	echo -n "[34mEvaluating synchronization between cells (B[m... "
	sync wt
	behavior="$behavior,$syncscore_wt"
	if [ 0 -eq 1 ] && [ $($curdir/analysis/calc "$syncscore_wt > 0.8") -eq 0 ]; then
		echo "Cells are not synchronized in the wild type (syncscore=$syncscore_wt). [31mParameter set deemed invalid. Parameter set simulations stopped.(B[m"
		behavior="$behavior,failed"
		rm -rf $pardir
		save_results
		exit 1
	else
		if [ 0 -eq 1 ]; then
			echo "[34mOK(B[m: Cells are synchronized in the wild type (syncscore=$syncscore_wt)"
		fi
		ofeatures wt 0 0 "wild type"
	fi
	echo "[34mDone with (B[mwild type"
	
	echo "[34mStarting (B[mdelta mutant ... "
	run_mut delta "delta mutant"
	echo -n "[34mEvaluating synchronization between cells (B[m... "
	sync delta		
	behavior="$behavior,$syncscore_delta"
	if [ 0 -eq 1 ] && [ $($curdir/analysis/calc "$syncscore_delta < 0.7") -eq 0 ]; then
		echo "Cells do not fall out of sync in the delta mutant (syncscore=$syncscore_delta). [31mParameter set deemed invalid. Parameter set simulations stopped.(B[m"
		behavior="$behavior,failed"
		rm -rf $pardir
		save_results
		exit 1
	else
		if [ 0 -eq 1 ]; then
			echo "[34mOK(B[m: Cells fall out of sync in the delta mutant (syncscore=$syncscore_delta)"
		fi
		ofeatures delta 1.04 1.30 "Delta mutant"
	fi
	echo "[34mDone with (B[mDelta mutant"
	
	echo "[34mStarting (B[mHer13 mutant ... "
	run_mut her13 "Her13 mutant"
	ofeatures her13 1.03 1.09 "Her13 mutant"
	echo "[34mDone with (B[mHer13 mutant"
	
	echo "[34mStarting (B[mHer1 mutant ... "
	run_mut her1 "Her1 mutant"
	ofeatures her1 0.97 1.03 "Her1 mutant"
	echo "[34mDone with (B[mHer1 mutant"
	
	echo "[34mStarting (B[mHer7 mutant ... "
	run_mut her7 "Her7 mutant"
	ofeatures her7 0.97 1.03 "Her7 mutant"
	echo "[34mDone with (B[mHer7 mutant"
	
	echo "[34mStarting (B[mHer713 mutant ... "
	run_mut her713 "Her713 mutant"
	ofeatures her713 1.03 1.09 "Her713 mutant"
	echo "[34mDone with (B[mHer713 mutant"
	
	if [ 0 -eq 1 ]; then
		echo "Wild type and all mutant conditions satisfied. [32mParameter set deemed valid.(B[m"
	fi
	echo -n "[34mCalculating synchronization between cells (B[m for Her1, Her7, Her13, and Her713... "
	sync her1
	sync her7
	sync her13
	sync her713
	behavior="$behavior,$syncscore_her1,$syncscore_her7,$syncscore_her13,$syncscore_her713"
	echo "[34mDone(B[m"
	
	if [ 0 -eq 1 ]; then
		echo -n "[34mWriting to (B[m$curdir/test/allpassed.csv ... "
		(
			flock -x 200
			echo "6,33.4447,40.5621,43.0444,36.6159,0.342157,0.250781,0.310726,0.186178,53.5442,43.1787,44.6229,32.658,0.336451,0.29116,0.136245,0.162951,0.294356,0.175883,0.137331,0.279126,0.3736,0.254014,9.66602,9.7696,-1,7.84426,1.5405,1.19211,1.51164,10.6693,0.0269152,0.265891,0.00226731,0.161716,0.0150319,0.108458,0.0111408,0.271972,0.014139,0.184653,0.00959672,0.203169,166.852,647.753,430.207">>$curdir/test/allpassed.csv
		) 200>>/dev/null
		echo "[34mDone(B[m"
	fi
	
	behavior="$behavior,passed"
	save_results
	 
